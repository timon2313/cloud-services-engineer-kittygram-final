name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Write SA key.json
        run: echo '${{ secrets.YC_SA_JSON_B64 }}' | base64 -d > key.json

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config='endpoints={"s3"="https://storage.yandexcloud.net"}' \
            -backend-config="bucket=kittygram-tfstate-04998327" \
            -backend-config="region=ru-central1" \
            -backend-config="key=tf-state.tfstate" \
            -backend-config="skip_region_validation=true" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_requesting_account_id=true" \
            -backend-config="skip_s3_checksum=true" \
            -backend-config="skip_metadata_api_check=true" \
            -backend-config="access_key=${{ secrets.ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        env:
          TF_VAR_cloud_id:  ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform plan -var "cloud_id=$TF_VAR_cloud_id" -var "folder_id=$TF_VAR_folder_id"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        env:
          TF_VAR_cloud_id:  ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve -var "cloud_id=$TF_VAR_cloud_id" -var "folder_id=$TF_VAR_folder_id"

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        env:
          TF_VAR_cloud_id:  ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform destroy -auto-approve -var "cloud_id=$TF_VAR_cloud_id" -var "folder_id=$TF_VAR_folder_id"

